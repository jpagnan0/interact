{"ast":null,"code":"import _toConsumableArray from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/src/containers/DashBoardContainer.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { medicationTerm, doFetchMedications } from \"../actions/medication\";\nimport { postUserMedication, updateUserMedications } from \"../actions/userMedications\";\nimport { userInteractions } from '../actions/userInteractions';\nimport MedicationSearch from \"../components/MedicationSearch\";\nimport MedicationList from \"./MedicationList\";\nimport UserMedicationList from \"./UserMedicationList\";\nimport InteractionList from './InteractionList';\n\nvar DashBoardContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DashBoardContainer, _Component);\n\n  function DashBoardContainer(props) {\n    var _this;\n\n    _classCallCheck(this, DashBoardContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DashBoardContainer).call(this, props));\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleClick = _this.handleClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(DashBoardContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          loggedInUser = _this$props.loggedInUser,\n          updateUserMedications = _this$props.updateUserMedications,\n          userInteractions = _this$props.userInteractions;\n      updateUserMedications(loggedInUser.id);\n      userInteractions(loggedInUser.id);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.medicationTerm.search !== prevProps.medicationTerm.search) {\n        var _this$props2 = this.props,\n            dispatch = _this$props2.dispatch,\n            _medicationTerm = _this$props2.medicationTerm;\n        dispatch(_medicationTerm(_medicationTerm));\n        dispatch(doFetchMedications(_medicationTerm));\n      }\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(nextMedication) {\n      this.props.medicationTerm(nextMedication);\n      this.props.doFetchMedications(nextMedication);\n    }\n  }, {\n    key: \"handleClick\",\n    value: function handleClick(e, med) {\n      var _this2 = this;\n\n      var id = this.props.loggedInUser.id;\n      this.props.postUserMedication(med, id).then(function () {\n        _this2.props.userInteractions();\n\n        _this2.props.updateUserMedications();\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props3 = this.props,\n          medications = _this$props3.medications,\n          loggedInUser = _this$props3.loggedInUser,\n          currentMedications = _this$props3.currentMedications,\n          currentInteractions = _this$props3.currentInteractions;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(MedicationSearch, {\n        medicationTerm: this.medicationTerm,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"center\",\n        alignItems: \"stretch\",\n        spacing: 0,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 4,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Search Results\"), React.createElement(Grid, {\n        item: true,\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(MedicationList, {\n        handleClick: this.handleClick,\n        medications: medications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }))), React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 4,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Interactions\"), React.createElement(InteractionList, {\n        loggedInUser: loggedInUser,\n        interactions: currentInteractions,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })), React.createElement(Grid, {\n        item: true,\n        lg: 4,\n        md: 4,\n        sm: 4,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h5\",\n        color: \"secondary\",\n        align: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, \"Current Medications\"), React.createElement(UserMedicationList, {\n        currentMedications: currentMedications,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return DashBoardContainer;\n}(Component);\n\nfunction mapStateToProps(state) {\n  return {\n    loggedInUser: state.loggedInUser,\n    currentMedications: state.currentUserMedications.medications,\n    currentInteractions: state.currentUserInteractions.interactions,\n    medicationTerm: state.medicationTerm,\n    medications: _toConsumableArray(state.medicationsReducer.medications)\n  };\n}\n\nexport default connect(mapStateToProps, {\n  doFetchMedications: doFetchMedications,\n  medicationTerm: medicationTerm,\n  postUserMedication: postUserMedication,\n  updateUserMedications: updateUserMedications,\n  userInteractions: userInteractions\n})(DashBoardContainer); // export default withRouter(DashBoardContainer);","map":{"version":3,"sources":["/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/src/containers/DashBoardContainer.js"],"names":["React","Component","connect","Grid","Typography","CssBaseline","medicationTerm","doFetchMedications","postUserMedication","updateUserMedications","userInteractions","MedicationSearch","MedicationList","UserMedicationList","InteractionList","DashBoardContainer","props","handleChange","bind","handleClick","loggedInUser","id","prevProps","search","dispatch","nextMedication","e","med","then","medications","currentMedications","currentInteractions","mapStateToProps","state","currentUserMedications","currentUserInteractions","interactions","medicationsReducer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport { medicationTerm, doFetchMedications } from \"../actions/medication\";\nimport { postUserMedication, updateUserMedications } from \"../actions/userMedications\";\nimport { userInteractions } from '../actions/userInteractions';\nimport MedicationSearch from \"../components/MedicationSearch\";\nimport MedicationList from \"./MedicationList\";\nimport UserMedicationList from \"./UserMedicationList\";\nimport InteractionList from './InteractionList';\n\nclass DashBoardContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentDidMount() {\n    const {\n      loggedInUser,\n      updateUserMedications,\n      userInteractions\n    } = this.props;\n\n    updateUserMedications(loggedInUser.id)\n    userInteractions(loggedInUser.id)\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.medicationTerm.search !== prevProps.medicationTerm.search) {\n      let { dispatch, medicationTerm } = this.props;\n      dispatch(medicationTerm(medicationTerm));\n      dispatch(doFetchMedications(medicationTerm));\n    }\n  }\n\n  handleChange(nextMedication) {\n    this.props.medicationTerm(nextMedication);\n    this.props.doFetchMedications(nextMedication);\n  }\n\n  handleClick(e, med) {\n    const {id} = this.props.loggedInUser;\n    this.props.postUserMedication(med, id)\n    .then(() => {\n      this.props.userInteractions()\n      this.props.updateUserMedications()\n    })\n  }\n\n  render() {\n    const { medications, loggedInUser, currentMedications, currentInteractions} = this.props;\n\n    return (\n      <div>\n        <CssBaseline>\n          <MedicationSearch\n            medicationTerm={this.medicationTerm}\n            onChange={this.handleChange}\n          />\n        </CssBaseline>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"center\"\n          alignItems=\"stretch\"\n          spacing={0}\n          align=\"center\"\n        >\n          <Grid item lg={4} md={4} sm={4} xs={12}>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"center\">\n              Search Results\n            </Typography>\n            <Grid item align=\"center\">\n              <MedicationList\n                handleClick={this.handleClick}\n                medications={medications}\n              />\n            </Grid>\n          </Grid>\n\n          <Grid item lg={4} md={4} sm={4} xs={12}>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"center\">\n              Interactions\n            </Typography>\n            <InteractionList loggedInUser={loggedInUser} interactions={currentInteractions}/>\n          </Grid>\n\n          <Grid item lg={4} md={4} sm={4} xs={12}>\n            <Typography variant=\"h5\" color=\"secondary\" align=\"center\">\n              Current Medications\n            </Typography>\n            <UserMedicationList\n              currentMedications={currentMedications}\n            />\n\n          </Grid>\n\n        </Grid>\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    loggedInUser: state.loggedInUser,\n    currentMedications: state.currentUserMedications.medications,\n    currentInteractions: state.currentUserInteractions.interactions,\n    medicationTerm: state.medicationTerm,\n    medications: [...state.medicationsReducer.medications]\n  };\n}\nexport default connect(\n  mapStateToProps,\n  {\n    doFetchMedications: doFetchMedications,\n    medicationTerm: medicationTerm,\n    postUserMedication: postUserMedication,\n    updateUserMedications: updateUserMedications,\n    userInteractions: userInteractions\n  }\n)(DashBoardContainer); // export default withRouter(DashBoardContainer);\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { AUTHENTICATED, UNAUTHENTICATED, AUTH_ERROR, LOGIN } from \"../constants/actionTypes\";\nexport function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    name: \"\",\n    username: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case AUTHENTICATED:\n      return _objectSpread({}, state, {\n        token: action.payload.jwt,\n        user: action.payload\n      });\n\n    case UNAUTHENTICATED:\n      return _objectSpread({}, state, {\n        authenticated: false\n      });\n\n    case AUTH_ERROR:\n      return _objectSpread({}, state, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n}\nexport function currentUser() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGIN:\n      var token = action.token;\n      var _action$payload = action.payload,\n          id = _action$payload.id,\n          name = _action$payload.name,\n          username = _action$payload.username,\n          medications = _action$payload.medications,\n          interactions = _action$payload.interactions;\n      return _objectSpread({}, {\n        id: id,\n        name: name,\n        username: username,\n        medications: medications,\n        interactions: interactions,\n        token: token\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/src/reducers/authReducer.js"],"names":["AUTHENTICATED","UNAUTHENTICATED","AUTH_ERROR","LOGIN","authReducer","state","name","username","password","confirmPassword","action","type","token","payload","jwt","user","authenticated","error","currentUser","id","medications","interactions"],"mappings":";AAAA,SACEA,aADF,EAEEC,eAFF,EAGEC,UAHF,EAIEC,KAJF,QAKO,0BALP;AAOA,OAAO,SAASC,WAAT,GAQL;AAAA,MAPAC,KAOA,uEAPQ;AACJC,IAAAA,IAAI,EAAE,EADF;AAEJC,IAAAA,QAAQ,EAAE,EAFN;AAGJC,IAAAA,QAAQ,EAAE,EAHN;AAIJC,IAAAA,eAAe,EAAE;AAJb,GAOR;AAAA,MADAC,MACA;;AACA,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKX,aAAL;AACE,+BACKK,KADL;AAEEO,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeC,GAFxB;AAGEC,QAAAA,IAAI,EAAEL,MAAM,CAACG;AAHf;;AAKF,SAAKZ,eAAL;AACE,+BAAYI,KAAZ;AAAmBW,QAAAA,aAAa,EAAE;AAAlC;;AACF,SAAKd,UAAL;AACE,+BAAYG,KAAZ;AAAmBY,QAAAA,KAAK,EAAEP,MAAM,CAACG;AAAjC;;AACF;AACE,aAAOR,KAAP;AAZJ;AAcD;AAED,OAAO,SAASa,WAAT,GAAyC;AAAA,MAApBb,KAAoB,uEAAZ,EAAY;AAAA,MAARK,MAAQ;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,KAAL;AAAA,UACUS,KADV,GACoBF,MADpB,CACUE,KADV;AAAA,4BAE6DF,MAAM,CAACG,OAFpE;AAAA,UAEUM,EAFV,mBAEUA,EAFV;AAAA,UAEcb,IAFd,mBAEcA,IAFd;AAAA,UAEoBC,QAFpB,mBAEoBA,QAFpB;AAAA,UAE8Ba,WAF9B,mBAE8BA,WAF9B;AAAA,UAE2CC,YAF3C,mBAE2CA,YAF3C;AAGE,+BAEK;AAAEF,QAAAA,EAAE,EAAFA,EAAF;AAAMb,QAAAA,IAAI,EAAJA,IAAN;AAAYC,QAAAA,QAAQ,EAARA,QAAZ;AAAsBa,QAAAA,WAAW,EAAXA,WAAtB;AAAmCC,QAAAA,YAAY,EAAZA,YAAnC;AAAiDT,QAAAA,KAAK,EAALA;AAAjD,OAFL;;AAKF;AACE,aAAOP,KAAP;AAVJ;AAYD","sourcesContent":["import {\n  AUTHENTICATED,\n  UNAUTHENTICATED,\n  AUTH_ERROR,\n  LOGIN,\n} from \"../constants/actionTypes\";\n\nexport function authReducer(\n  state = {\n      name: \"\",\n      username: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n  },\n  action\n) {\n  switch (action.type) {\n    case AUTHENTICATED:\n      return {\n        ...state,\n        token: action.payload.jwt,\n        user: action.payload,\n      };\n    case UNAUTHENTICATED:\n      return { ...state, authenticated: false };\n    case AUTH_ERROR:\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport function currentUser(state = {}, action) {\n  switch (action.type) {\n    case LOGIN:\n      const { token } = action;\n      const { id, name, username, medications, interactions  } = action.payload;\n      return {\n        // ...state,\n        ...{ id, name, username, medications, interactions, token }\n      };\n\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { AUTHENTICATED, LOGIN } from \"../constants/actionTypes\";\nimport { push } from \"connected-react-router\";\nvar API = \"http://localhost:3000/api/v1\";\nexport function setCurrentUser(currentUser) {\n  var name = currentUser.name,\n      username = currentUser.username,\n      password = currentUser.password;\n  return {\n    user: {\n      name: name,\n      username: username,\n      password: password\n    }\n  };\n}\nexport function getCurrentUser(currentUser) {\n  var username = currentUser.username,\n      password = currentUser.password;\n  return {\n    user: {\n      username: username,\n      password: password\n    }\n  };\n}\nexport function loggedIn() {\n  return function (dispatch) {\n    return fetch('http://localhost:3000/api/v1/current_user', {\n      method: 'GET',\n      headers: {\n        Authorization: \"Bearer \".concat(localStorage.token)\n      }\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      return dispatch(setCurrentUser(res.user));\n    });\n  };\n}\nexport function login(_ref) {\n  var username = _ref.username,\n      password = _ref.password;\n  var request = new Request(\"\".concat(API, \"/auth\"), {\n    method: \"POST\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(localStorage.token)\n    }),\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password\n      }\n    })\n  });\n  return function (dispatch) {\n    return fetch(request).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      var user = res.user,\n          jwt = res.jwt; // if(jwt === localStorage.token)\n\n      dispatch({\n        type: LOGIN,\n        payload: user,\n        token: jwt\n      });\n      localStorage.setItem(\"token\", jwt);\n\n      if (loggedIn()) {\n        dispatch(push(\"/dashboard\"));\n      }\n    }).catch(function (err) {\n      alert(err);\n    });\n  };\n}\nexport function signup(user, dispatch) {\n  // console.log(\"user in auth action: \", user)\n  return function (dispatch) {\n    return fetch(\"\".concat(API, \"/users\"), {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(setCurrentUser(user))\n    }).then(function (res) {\n      return res.json();\n    }).then(function (res) {\n      var jwt = res.jwt,\n          user = res.user;\n      dispatch({\n        type: AUTHENTICATED,\n        payload: {\n          jwt: jwt,\n          user: user\n        }\n      });\n      dispatch({\n        type: LOGIN,\n        payload: user,\n        token: jwt\n      });\n      localStorage.setItem(\"token\", jwt);\n      dispatch(push(\"/dashboard\"));\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/src/actions/auth.js"],"names":["AUTHENTICATED","LOGIN","push","API","setCurrentUser","currentUser","name","username","password","user","getCurrentUser","loggedIn","dispatch","fetch","method","headers","Authorization","localStorage","token","then","res","json","login","request","Request","Headers","body","JSON","stringify","jwt","type","payload","setItem","catch","err","alert","signup","Accept"],"mappings":"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","sourcesContent":["import { AUTHENTICATED, LOGIN } from \"../constants/actionTypes\";\nimport { push } from \"connected-react-router\";\n\nconst API = `http://localhost:3000/api/v1`;\n\nexport function setCurrentUser(currentUser) {\n  const { name, username, password } = currentUser;\n  return {\n    user: {\n      name: name,\n      username: username,\n      password: password\n    }\n  };\n}\n\nexport function getCurrentUser(currentUser) {\n  const { username, password } = currentUser;\n  return {\n    user: {\n      username: username,\n      password: password\n    }\n  };\n}\n\nexport function loggedIn () {\n  return dispatch => {\n    return fetch('http://localhost:3000/api/v1/current_user', {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${localStorage.token}`\n      }\n    }).then(res => res.json())\n    .then(res => dispatch(setCurrentUser(res.user)))\n  }\n}\n\n\nexport function login({ username, password }) {\n  const request = new Request(`${API}/auth`, {\n    method: \"POST\",\n    headers: new Headers({\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${localStorage.token}`\n    }),\n    body: JSON.stringify({ user: { username: username, password: password } })\n  });\n  return dispatch => {\n    return fetch(request)\n      .then(res => res.json())\n      .then(res => {\n        const { user, jwt } = res;\n\n        // if(jwt === localStorage.token)\n        dispatch({ type: LOGIN, payload: user, token: jwt });\n        localStorage.setItem(\"token\", jwt);\n        if (loggedIn()) {\n          dispatch(push(\"/dashboard\"));\n        }\n      })\n      .catch(err => {\n        alert(err);\n      });\n  };\n}\n\nexport function signup(user, dispatch) {\n  // console.log(\"user in auth action: \", user)\n  return dispatch => {\n    return fetch(`${API}/users`, {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(setCurrentUser(user))\n    })\n      .then(res => res.json())\n      .then(res => {\n        const { jwt, user } = res;\n        dispatch({\n          type: AUTHENTICATED,\n          payload: {\n            jwt,\n            user\n          }\n        });\n        dispatch({\n          type: LOGIN,\n          payload: user,\n          token: jwt\n        });\n        localStorage.setItem(\"token\", jwt);\n        dispatch(push(\"/dashboard\"));\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}
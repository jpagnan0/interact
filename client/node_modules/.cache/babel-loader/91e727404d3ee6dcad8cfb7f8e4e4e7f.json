{"ast":null,"code":"import _toConsumableArray from \"/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport fetch from 'cross-fetch';\nimport { RECEIVE_MEDICATIONS, SET_TERM } from '../constants/actionTypes';\nvar MEDICATION_URL = \"http://localhost:3000/api/v1/search?medication_name=\";\nexport function setTerm(medication) {\n  return {\n    type: SET_TERM,\n    medication: medication\n  };\n}\n\nfunction fetchMedications(medication) {\n  return fetch(\"\".concat(MEDICATION_URL).concat(medication)).then(function (res) {\n    return res.json();\n  });\n}\n\nexport function medicationTerm(searchTerm) {\n  return function (dispatch) {\n    dispatch({\n      type: SET_TERM,\n      medicationTerm: _toConsumableArray(searchTerm)\n    });\n  };\n}\nexport function doFetchMedications(medication) {\n  return function (dispatch) {\n    fetchMedications(medication).then(function (json) {\n      if (json.status === 500) {\n        dispatch({\n          type: \"TYPING\",\n          medications: []\n        });\n      } else {\n        dispatch({\n          type: RECEIVE_MEDICATIONS,\n          medications: json\n        });\n      }\n    });\n  };\n}","map":{"version":3,"sources":["/Users/adamsaland/Developer/flatiron/mod_five/final_project/react-interact/src/actions/medication.js"],"names":["fetch","RECEIVE_MEDICATIONS","SET_TERM","MEDICATION_URL","setTerm","medication","type","fetchMedications","then","res","json","medicationTerm","searchTerm","dispatch","doFetchMedications","status","medications"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SACEC,mBADF,EAEEC,QAFF,QAGO,0BAHP;AAKA,IAAMC,cAAc,yDAApB;AAEA,OAAO,SAASC,OAAT,CAAiBC,UAAjB,EAA6B;AAClC,SAAM;AACJC,IAAAA,IAAI,EAAEJ,QADF;AAEJG,IAAAA,UAAU,EAAVA;AAFI,GAAN;AAID;;AAED,SAASE,gBAAT,CAA0BF,UAA1B,EAAsC;AACpC,SAAOL,KAAK,WAAIG,cAAJ,SAAqBE,UAArB,EAAL,CACAG,IADA,CACK,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADR,CAAP;AAED;;AACD,OAAO,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;AAEzC,SAAO,UAAAC,QAAQ,EACf;AACEA,IAAAA,QAAQ,CAAC;AACPP,MAAAA,IAAI,EAAEJ,QADC;AAEPS,MAAAA,cAAc,qBAAMC,UAAN;AAFP,KAAD,CAAR;AAID,GAND;AAOD;AACD,OAAO,SAASE,kBAAT,CAA4BT,UAA5B,EAAwC;AAE7C,SAAO,UAACQ,QAAD,EAAc;AAEjBN,IAAAA,gBAAgB,CAACF,UAAD,CAAhB,CACCG,IADD,CACM,UAAAE,IAAI,EAAI;AACZ,UAAGA,IAAI,CAACK,MAAL,KAAgB,GAAnB,EAAyB;AACtBF,QAAAA,QAAQ,CAAC;AAACP,UAAAA,IAAI,EAAE,QAAP;AAAiBU,UAAAA,WAAW,EAAE;AAA9B,SAAD,CAAR;AACF,OAFD,MAGK;AACLH,QAAAA,QAAQ,CAAC;AACPP,UAAAA,IAAI,EAAEL,mBADC;AAEPe,UAAAA,WAAW,EAAEN;AAFN,SAAD,CAAR;AAID;AACF,KAXC;AAYH,GAdD;AAeD","sourcesContent":["import fetch from 'cross-fetch';\nimport {\n  RECEIVE_MEDICATIONS,\n  SET_TERM,\n} from '../constants/actionTypes';\n\nconst MEDICATION_URL = `http://localhost:3000/api/v1/search?medication_name=`;\n\nexport function setTerm(medication) {\n  return{\n    type: SET_TERM,\n    medication\n  }\n}\n\nfunction fetchMedications(medication) {\n  return fetch(`${MEDICATION_URL}${medication}`)\n        .then(res => res.json())\n}\nexport function medicationTerm(searchTerm) {\n\n  return dispatch =>\n  {\n    dispatch({\n      type: SET_TERM,\n      medicationTerm: [...searchTerm]\n    })\n  }\n}\nexport function doFetchMedications(medication) {\n\n  return (dispatch) => {\n\n      fetchMedications(medication)\n      .then(json => {\n        if(json.status === 500 ) {\n           dispatch({type: \"TYPING\", medications: []})\n        }\n        else {\n        dispatch({\n          type: RECEIVE_MEDICATIONS,\n          medications: json\n        })\n      }\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}